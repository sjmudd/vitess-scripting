#!/bin/sh
#
# script to manager vtworker.
# - configuration is in vtworker.conf
#

mydir=$(dirname $0)
test -r $mydir/common_routines.sh || {
	echo "ERROR: $(basename $0): can't find expected $mydir/common_routines.sh. Exiting"
	exit 1
}
source $mydir/common_routines.sh

usage () {
	local rc=${1:-1}

	cat <<-EOF
	$myname (C) 2017 Simon J Mudd <sjmudd@pobox.com>

	Script to manage vtworker for vitess.
	Usage: $myname [options] <start|stop|status|restart> <instance_id>

	options:
	-h help message
	-v verbose logging
	EOF

	exit $rc
}

start () {
	echo "Starting vtworker..."

	$sudo_exec \
	exec $VTROOT/bin/vtworker \
		$TOPOLOGY_FLAGS \
		-cell test \
		-log_dir $VTDATAROOT/tmp \
		-alsologtostderr \
		-service_map=grpc-vtworker \
		-grpc_port $GRPC_PORT \
		-port $WEB_PORT \
		-pid_file $PIDFILE \
		-use_v3_resharding_mode &

	pid=$!
	sleep 1
	if ps -p $pid >/dev/null 2>&1; then
		msg_info "Started vtworker $UNIQUE_ID [pid: $pid]"
	else
		msg_fatal "Failed to start vtworker $UNIQUE_ID [pid: $pid] no longer running"
	fi

	disown -a
}

stop () {
	stop_by_pidfile $vtworker $PIDFILE
}

status () {
	check_status vtworker $PIDFILE
}

hostname_from_id () {
	local id="$1"

	awk -v id=$id '{ if ($1 == id) print $2 }' $vtworker_config_file
}

cell_from_id () {
	local id="$1"

	awk -v id=$id '{ if ($1 == id) print $3 }' $vtworker_config_file
}

web_port_from_id () {
	local id="$1"

	awk -v id=$id '{ if ($1 == id) print $4 }' $vtworker_config_file
}

grpc_port_from_id () {
	local id="$1"

	awk -v id=$id '{ if ($1 == id) print $5 }' $vtworker_config_file
}

user_from_id () {
	local id="$1"

	awk -v id=$id '{ if ($1 == id) print $6 }' $vtworker_config_file
}

###
# start here
###

verbose=
while getopts vh flag; do
	case $flag in
	v) verbose=1;;
	h) usage 0;;
	esac
done
shift $(($OPTIND - 1))

if [ $# != 2 ]; then
	usage 1
fi

ACTION=$1
if [ -z "$ACTION" ]; then
	usage 1
fi

UNIQUE_ID=$2
if [ -z "$UNIQUE_ID" ]; then
	usage 1
fi

# find the instance's hostname and see if it's mine
h=$(hostname_from_id $UNIQUE_ID)
if [ -z "$h" ]; then
	msg_fatal "Could not find a hostname from id $UNIQUE_ID"
fi
if [ "$h" != "$(hostname)" ]; then
	copy_files $h

	msg_verbose "Running $h:$myname $UNIQUE_ID"
	ssh $h ./$myname $ACTION $UNIQUE_ID ||\
		msg_fatal "Failed to run $h:$myname"

	exit $?
	# should never get here!
fi

msg_verbose "Running $myname $UNIQUE_ID locally"

mkdir -p ${VTDATAROOT}/tmp
mkdir -p ${VTDATAROOT}/backups

WEB_PORT=$(web_port_from_id $UNIQUE_ID)
GRPC_PORT=$(grpc_port_from_id $UNIQUE_ID)
VITESS_USER=$(user_from_id $UNIQUE_ID)
CELL=$(cell_from_id $UNIQUE_ID)
PIDFILE=$VTDATAROOT/tmp/vtworker.pid

if [ "$USER" != "$VITESS_USER" ]; then
	sudo_exec="sudo -E -u $VITESS_USER"
	sudo_kill="sudo -E -u $VITESS_USER kill"
else
	sudo_exec=
	sudo_kill=kill
fi

# now do the real work
case $ACTION in
start)          start;;
stop)           stop;;
status)         status;;
restart)        stop && start;;
*)              usage 1;;
esac
