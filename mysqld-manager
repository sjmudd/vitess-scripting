#!/bin/bash

# source the common_routines.sh script which should be in the same directory
mydir=$(dirname $0)
test -r $mydir/common_routines.sh || {
	echo "ERROR: $(basename $0): can't find expected $mydir/common_routines.sh. Exiting"
	exit 1
}
source $mydir/common_routines.sh

usage () {
	local rc=${1:-1}

	cat <<-EOF
	$myname (C) 2017 Simon J Mudd <sjmudd@pobox.com>

	Script to manage mysqld for vitess.
	Usage: $myname [options] <start|stop|status|restart> <instance_id>

	options:
	-h help message
	-v verbose logging
	EOF

	exit $rc
}

# startup mysqld
start () {
	local action

	mkdir -p ${VTDATAROOT}/tmp
	mkdir -p ${VTDATAROOT}/backups

	# get needed credentials
	read_credential_config $UNIQUE_ID

	echo "Starting MySQL for tablet $ALIAS..."
	action="init -init_db_sql_file $INIT_DB_SQL_FILE"

	if [ -d $VTDATAROOT/$TABLET_DIR ]; then
	    echo "Resuming from existing vttablet dir:"
	    echo "    $VTDATAROOT/$TABLET_DIR"
	    action='start'
	fi

	$sudo_exec \
	$VTROOT/bin/mysqlctl \
	    -log_dir $VTDATAROOT/tmp \
	    -tablet_uid $UNIQUE_ID \
	    $DBCONFIG_DBA_FLAGS \
	    -mysql_port $MYSQL_PORT \
	    $action &

	# Wait for 'mysqlctl to start mysqld'
	wait
}

stop () {
	echo "Stopping MySQL for tablet $ALIAS..."
	$sudo_exec \
	$VTROOT/bin/mysqlctl \
		-db-config-dba-uname vt_dba \
		-tablet_uid $UNIQUE_ID \
		shutdown &

	# Wait for 'mysqlctl shutdown' commands to finish.
	wait
}

# check the status.
# - Look for the directory where mysqld is supposed to be running
status () {
	check_status mysqld $PIDFILE
}

###
# start here
###

verbose=
while getopts vh flag; do
	case $flag in
	v) verbose=1;;
	h) usage 0;;
	esac
done
shift $(($OPTIND - 1))

if [ $# != 2 ]; then
	usage 1
fi

ACTION=$1
if [ -z "$ACTION" ]; then
	usage 1
fi

UNIQUE_ID=$2
if [ -z "$UNIQUE_ID" ]; then
	usage 1
fi

# find the instance's hostname and see if it's mine
h=$(hostname_from_id $UNIQUE_ID)
if [ -z "$h" ]; then
	msg_fatal "Can not find hostname for id $UNIQUE_ID"
fi

if [ "$h" != "$(hostname)" ]; then
	copy_files $h

	msg_verbose "Running $h:$myname $UNIQUE_ID"
	ssh $h ./$myname $ACTION $UNIQUE_ID ||\
		msg_fatal "Failed to run $h:$myname"

	exit $?
	# should never get here!
fi

msg_verbose "Running $myname $UNIQUE_ID locally"

mkdir -p ${VTDATAROOT}/tmp
mkdir -p ${VTDATAROOT}/backups

DBNAME=$(keyspace_from_id $UNIQUE_ID)
KEYSPACE=$DBNAME

TABLET_DIR=$(printf "vt_%010d" $UNIQUE_ID)
MYSQL_PORT=$(mysql_port_from_id $UNIQUE_ID)
WEB_PORT=$(web_port_from_id $UNIQUE_ID)
GRPC_PORT=$(grpc_port_from_id $UNIQUE_ID)
ALIAS=$(alias_from_id $UNIQUE_ID)
SHARD=$(shard_from_id $UNIQUE_ID)
VITESS_USER=$(user_from_id $UNIQUE_ID)
TABLET_TYPE=replica
PIDFILE=$VTDATAROOT/$TABLET_DIR/mysql.pid

if [ "$USER" != "$VITESS_USER" ]; then
	sudo_exec="sudo -E -u $VITESS_USER"
	sudo_kill="sudo -E -u $VITESS_USER kill"
else
	sudo_exec=
	sudo_kill=kill
fi

# now do the real work
case $ACTION in
start)		start;;
stop)		stop;;
status) 	status;;
restart)	stop && start;;
*)		usage 1;;
esac
