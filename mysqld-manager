#!/bin/bash

# source the common_routines.sh script which should be in the same directory
mydir=$(dirname $0)
test -r $mydir/common_routines.sh || {
	echo "ERROR: $(basename $0): can't find expected $mydir/common_routines.sh. Exiting"
	exit 1
}
source $mydir/common_routines.sh
process=mysqld

# startup mysqld
start () {
	local action
	local _vtprefix
	local _server_id

	# get needed credentials
	read_credential_config $UNIQUE_ID

	# Export these values so that mysqlctl and the make_mycnf hook can pick them up
	export VITESS_CELL=$(cell_from_id $UNIQUE_ID)
	export VITESS_KEYSPACE
	export VITESS_SHARD
	export VITESS_UNIQUE_ID=$UNIQUE_ID

	# create any missing directories
	mkdir_if_missing ${VTDATAROOT}/tmp ${VTDATAROOT}/backups $VTDEPLOY

	msg_info "Starting $process for tablet $ALIAS..."
	action="init -init_db_sql_file $INIT_DB_SQL_FILE"

	if [ -d $VTDATAROOT/$TABLET_DIR ]; then
		msg_info "Resuming from existing vttablet dir:"
		msg_info "    $VTDATAROOT/$TABLET_DIR"
		action='start'
	fi

	# we now run this script as the end user so no need for sudo
	$VTROOT/bin/mysqlctl \
	    -log_dir $VTDATAROOT/tmp \
	    -tablet_uid $UNIQUE_ID \
	    $DBCONFIG_DBA_FLAGS \
	    -mysql_port $MYSQL_PORT \
	    $action &

	# Wait for 'mysqlctl to start $process'
	wait

	disown -a
}

stop () {
	msg_info "Stopping $process for tablet $ALIAS..."

	# we now run this script as the end user so no need for sudo
	$VTROOT/bin/mysqlctl \
		-db-config-dba-uname vt_dba \
		-tablet_uid $UNIQUE_ID \
		shutdown &

	# Wait for 'mysqlctl shutdown' commands to finish.
	wait
}

# check the status.
# - Look for the directory where mysqld is supposed to be running
status () {
	check_status $process $PIDFILE
}

process_instance () {
	local UNIQUE_ID=$1
	local h
	local opt_v

	[ -n "$verbose" ] && opt_v=-v

	# find the instance's hostname and see if it's mine
	h=$(hostname_from_id $UNIQUE_ID)
	if [ -z "$h" ]; then
		msg_fatal "Can not find hostname for id $UNIQUE_ID"
	fi

	MYSQLD_USER=$(mysqld_user_from_id $UNIQUE_ID)
	[ -z "$MYSQLD_USER" ] && \
		msg_fatal "Could not find a username from id $UNIQUE_ID"

	# set the environment correctly from the hostname/process
	set_environment_from_parameters $h $process $UNIQUE_ID

	if [ "$h" != "$(hostname)" ]; then
		copy_files $h $MYSQLD_USER

		msg_verbose "Running $h:$myname $UNIQUE_ID"
		ssh $h sudo -E -u $MYSQLD_USER $VTDEPLOY/$myname ${opt_v} $ACTION $UNIQUE_ID
		return $?
		# should never get here!
	fi

	msg_verbose "Running $myname $UNIQUE_ID locally"

	DBNAME=$(keyspace_from_id $UNIQUE_ID)
	VITESS_KEYSPACE=$DBNAME

	TABLET_DIR=$(printf "vt_%010d" $UNIQUE_ID)
	MYSQL_PORT=$(mysql_port_from_id $UNIQUE_ID)
	WEB_PORT=$(web_port_from_id $UNIQUE_ID)
	GRPC_PORT=$(grpc_port_from_id $UNIQUE_ID)
	ALIAS=$(alias_from_id $UNIQUE_ID)
	VITESS_SHARD=$(shard_from_id $UNIQUE_ID)
	TABLET_TYPE=replica
	PIDFILE=$VTDATAROOT/$TABLET_DIR/mysql.pid

	# now do the real work
	case $ACTION in
	start)		start;;
	stop)		stop;;
	status) 	status;;
	restart)	stop && start;;
	esac
}

###
# start here
###

verbose=
while getopts vh flag; do
	case $flag in
	v) verbose=1;;
	h) usage $process 0;;
	esac
done
shift $(($OPTIND - 1))

if [ $# -lt 2 ]; then
	usage $process 1
fi

ACTION=$1
check_action "$ACTION" ||\
	usage $process 1

shift

# iterate over each instance
while [ $# != 0 ]; do
	process_instance $1
	shift
done
